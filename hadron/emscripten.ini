[binaries]
c = 'emcc'
cpp = 'em++'
ar = 'emar'
strip = 'emstrip'

[constants]
# Emscripten + emnapi libuv multithreading
emscripten_pthread = [
  '-pthread',
  '-DEMNAPI_WORKER_POOL_SIZE=4'
  ]

[properties]
emnapi = true
async_args = emscripten_pthread
debug_c_args = [ '-gsource-map' ]
debug_link_args = [ '-gsource-map', '-sSAFE_HEAP=1', '-sASSERTIONS=2', '-sSTACK_OVERFLOW_CHECK=2' ]
name_suffix = 'mjs'
extra_output_files = [ 'wasm', 'worker.mjs' ]

[built-in options]
cpp_args = [
  '-Wall',
  '-Wextra',
  '-Wno-deprecated-declarations',
  '-Wno-unused-function',
  '-Wno-type-limits',
  '-Wno-deprecated-copy',
  '-Wno-sometimes-uninitialized',
  '-Wno-unused-parameter',
  '-Wno-sometimes-uninitialized',
  '-sNO_DISABLE_EXCEPTION_CATCHING',
  '-D__STDC_FORMAT_MACROS'
  ]
cpp_link_args = [
  '-sDEFAULT_PTHREAD_STACK_SIZE=1MB',
  '-sPTHREAD_POOL_SIZE=4',
  '-Wno-emcc',
  '-Wno-pthreads-mem-growth',
  '-sALLOW_MEMORY_GROWTH=1',
  '-sEXPORTED_FUNCTIONS=["_napi_register_wasm_v1","_malloc","_free"]',
  '-sNO_DISABLE_EXCEPTION_CATCHING',
  '--bind',
  '-sMODULARIZE',
  '-sEXPORT_ES6=1',
  '-sEXPORT_NAME=example',
# Pay attention to this value, if you overflow it, you will get
# all kinds of weird errors
  '-sSTACK_SIZE=1MB'
  ]
c_link_args = cpp_link_args
